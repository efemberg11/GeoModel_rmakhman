build_geomodel_athena:
  image: gitlab-registry.cern.ch/atlas-sit/docker/alma9-atlasos-dev

  stage: step-A
  rules:
    - if: $CI_PIPELINE_SOURCE == "merge_request_event"
      changes:
      - GeoModelCore/**/*
      - GeoModelIO/**/*
      - GeoModelTools/**/*
      - cmake/**/*
      - CMakeLists.txt

  variables:
    CCACHE_KEY_SUFFIX: r2
    CCACHE_DIR: ${CI_PROJECT_DIR}/ccache_${CCACHE_KEY_SUFFIX}
    CCACHE_MAXSIZE: 10G

    ATLAS_LOCAL_ROOT_BASE: /cvmfs/atlas.cern.ch/repo/ATLASLocalRootBase
    LCG_PLATFORM: x86_64-el9-gcc13-opt
    ATHENA_GIT_REPO: https://gitlab.cern.ch/atlas/athena.git
    ATHENA_RELEASE: main
    ATHENA_REF: main


  cache:
    key: ccache-geomodel-$CI_COMMIT_REF_SLUG
    when: always
    paths:
      - ${CCACHE_DIR}

  tags:
    - cvmfs

  artifacts:
    paths:
      - geomodel-install
      # - athena-build
      - athena-install
      - .asetup.save
    expire_in: 4 hours

  before_script:
    - sudo dnf install -y jq

  script:
    - git config --global user.name gitlab
    - git config --global user.email cijob@example.com
    - echo $CI_MERGE_REQUEST_PROJECT_ID
    - echo $CI_MERGE_REQUEST_IID
    - export HEADERS_CHANGED=$(curl -s https://gitlab.cern.ch/api/v4/projects/${CI_MERGE_REQUEST_PROJECT_ID}/merge_requests/${CI_MERGE_REQUEST_IID}/changes | jq -r .changes[].new_path | grep -e "\.h$" > /dev/null ; printf $?)
    - export IS_MERGE_REQUEST=$([ $CI_PIPELINE_SOURCE = "merge_request_event" ]; printf $?)
    - athena_ci/athena_build.sh


.run_base:
  stage: step-B

  rules:
    - if: $CI_PIPELINE_SOURCE == "merge_request_event"
      changes:
      - GeoModelCore/**/*
      - GeoModelIO/**/*
      - GeoModelTools/**/*
      - cmake/**/*
      - CMakeLists.txt

  # This image sould work, but it seems it doesn't. Using my derivative until 
  # I figure out what the difference is.
  # image: gitlab-registry.cern.ch/atlas-sit/docker/alma9-atlasos-dev
  image: gitlab-registry.cern.ch/acts/acts-athena-ci/alma9-atlasos-dev:v2

  needs: 
    - build_geomodel_athena

  variables:
    USER: nobody # the run workflow tests need this set

    ATLAS_LOCAL_ROOT_BASE: /cvmfs/atlas.cern.ch/repo/ATLASLocalRootBase
    LCG_PLATFORM: x86_64-el9-gcc13-opt
    ATHENA_GIT_REPO: https://gitlab.cern.ch/atlas/athena.git
    ATHENA_RELEASE: main
    ATHENA_REF: main

  tags:
    - cvmfs

  artifacts:
    paths:
      - run
    when: always
    expire_in: 1 week

  before_script:
    - git config --global user.name gitlab
    - git config --global user.email cijob@example.com


    - sudo dnf install -y which

    - source ${ATLAS_LOCAL_ROOT_BASE}/user/atlasLocalSetup.sh || true
    - asetup --restore || true
    - lsetup git || true

    - echo "Cloning ${ATHENA_GIT_REPO} @ ${ATHENA_REF}"
    - git clone ${ATHENA_GIT_REPO} -b ${ATHENA_REF}
    - | 
        pushd athena 
        ../athena_ci/apply_patches.sh
        popd

    - source athena-install/setup.sh
    - export LD_LIBRARY_PATH=$PWD/geomodel-install/lib64:$LD_LIBRARY_PATH
    - mkdir -p run


################################################
###       Simulation_tf tests
################################################
simulation_tests_run2:
  extends: .run_base
  script:
    - cd run
    - RunWorkflowTests_Run2.py --CI -s -w FullSim --threads 4 -e '--maxEvents 10' --detailed-comparison
    - mv run_s4005/log.EVNTtoHITS ./
    - mv run_s4005/myHITS.pool.root ./
  artifacts:
    paths:
      - Run2Tests.log
      - myHITS.pool.root
      - log.EVNTtoHITS

    expire_in: 1 day

simulation_tests_run3:
  extends: .run_base
  script:
    - cd run
    - RunWorkflowTests_Run3.py --CI -s -w FullSim --threads 4 -e '--maxEvents 20' --run-only 
    - mv run_s4006/log.EVNTtoHITS ./
    - mv run_s4006/myHITS.pool.root ./
  artifacts:
    paths:
      - Run3Tests.log
      - myHITS.pool.root
      - log.EVNTtoHITS

simulation_tests_run4:
  extends: .run_base
  script:
    - cd run
    - RunWorkflowTests_Run4.py --CI -s -w FullSim --threads 4 -e '--maxEvents 10' --detailed-comparison
    - mv run_s3761/myHITS.pool.root ../
    - mv run_s3761/log.EVNTtoHITS ./
  artifacts:
    paths:
      - myHITS.pool.root
      - RunUpgradeTests.log
      - log.EVNTtoHITS
    expire_in: 1 day


###################################################
###         Reco_tf.py tests
###################################################
run_workflow_tests_run2_mc:
  extends: .run_base
  script:
    - cd run
    - RunWorkflowTests_Run2.py --CI -r -w MCReco --threads 0 -e '--maxEvents 25 --conditionsTag OFLCOND-MC16-SDR-RUN2-12' --detailed-comparison

run_workflow_tests_run3_mc:
  extends: .run_base
  script:
    - cd run
    - RunWorkflowTests_Run3.py --CI -r -w MCReco -e '--maxEvents 25 --conditionsTag OFLCOND-MC23-SDR-RUN3-08' --detailed-comparison

run_workflow_tests_run4_reco:
  extends: .run_base
  needs: 
      - simulation_tests_run4
      - build_geomodel_athena
  script:
      - cd run
      - RunWorkflowTests_Run4.py --CI -r -w MCReco -e '--conditionsTag OFLCOND-MC21-SDR-RUN4-03 --maxEvents 5 --inputHITSFile=../../myHITS.pool.root' --no-output-checks


###################################################
###      Geometry dump for debugging
###################################################
dumpGeoTest_run2:
  extends: .run_base
  script:
      - python -m DumpGeo.DumpGeoConfig --detDescr ATLAS-R2-2016-01-02-01
  artifacts:
    paths:
      - geometry-ATLAS-R2-2016-01-02-01.db
    expire_in: 1 day

dumpGeoTest_run3:
  extends: .run_base
  script:
      - python -m DumpGeo.DumpGeoConfig --detDescr ATLAS-R3S-2021-03-02-00
  artifacts:
    paths:
      - geometry-ATLAS-R3S-2021-03-02-00.db
    expire_in: 1 day

dumpGeoTest_run4:
  extends: .run_base
  script:
      - python -m DumpGeo.DumpGeoConfig --detDescr ATLAS-P2-RUN4-03-00-00
  artifacts:
    paths:
      - geometry-ATLAS-P2-RUN4-03-00-00.db
    expire_in: 1 day
